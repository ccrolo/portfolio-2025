---
import { basics } from '@cv'
import { Icon } from 'astro-icon/components'

const { name, position, label, image, email, profiles, location } = basics
const { city } = location
---

<section>
  <div class="hero-text">
    <h1 class="scale">{name}</h1>
    <h2 class="animation-position">{position}</h2>
    <p set:html={label} />
    <div class="location">
      <Icon name="location" />
      <p>{city}</p>
    </div>
    <div class="contact">
      {
        email && (
          <a
            href={`mailto:{${email}`}
            target="_blank"
            rel="noopener noreferrer"
            title={`Enviar correo a ${email}`}
          >
            <Icon name="mail" />
          </a>
        )
      }
      <!-- {
        phone && (
          <a
            href={`tel:{${phone}`}
            target="_blank"
            rel="noopener noreferrer"
            title={`Llamar a ${phone}`}
          >
            <Icon name="phone" />
          </a>
        )
      } -->
      {
        profiles.map((profile) => {
          const { network, url, icon } = profile
          return (
            <a
              href={url}
              target="_blank"
              rel="noopener noreferrer"
              title={network}
            >
              <Icon name={icon} />
            </a>
          )
        })
      }
      <a href="/cristina_CV.pdf" download="cristina_cv.pdf" title="CV Cristina">
        <Icon name="cv" /></a
      >
    </div>
  </div>
  <figure>
    <img
      class="img-appear img-appear-on-load"
      src={image}
      alt="Cristina Romero"
    />
  </figure>
</section>

<style>
  section {
    display: flex;
    flex-direction: column-reverse;
    padding-top: 80px;
    align-items: flex-start;
    position: relative;
  }

  @media (min-width: 425px) {
    section {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
    }
  }
  @media (min-width: 480px) {
    section {
      padding-top: 150px;
    }
  }

  .hero-text {
    grid-column: span 3;
    max-width: 670px;
    display: grid;
    place-items: center;
    justify-items: start;
  }

  @media (min-width: 768px) {
    .hero-text {
      grid-column: span 2;
    }
  }

  .location {
    display: flex;
    gap: 10px;
    padding: 20px 0 0;
    align-items: center;

    p {
      font-family: var(--font-primary-100);
      font-size: 16px;
      font-weight: 600;
    }
  }
  @media (min-width: 480px) {
    .location {
      padding: 20px 0;
    }
  }

  .contact {
    display: flex;
    gap: 10px;
    padding: 10px 0;
    margin-left: -10px;
  }

  a {
    width: 40px;
    height: 40px;
    display: grid;
    place-items: center;
    background-color: transparent;
    border-radius: 50%;
    transition: background-color 0.7s ease;
  }
  a:hover {
    background-color: var(--secondary-100);
  }
  [data-icon] {
    font-size: 1.5rem;
    color: var(--primary-100);
    height: 30px;
    transition: filter 0.7s ease;
  }
  a:hover [data-icon] {
    filter: sepia(0.2) brightness(4);
  }
  figure {
    position: absolute;
    width: 82px;
    right: 0;
    top: 72px;
  }

  @media (min-width: 480px) {
    figure {
      width: 126px;
      top: 130px;
    }
  }
  @media (min-width: 768px) {
    figure {
      width: 230px;
      justify-self: flex-end;
      margin: unset;
    }
  }

  img {
    object-fit: cover;
  }
</style>
